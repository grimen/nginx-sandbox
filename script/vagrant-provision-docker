#!/usr/bin/env sh
set -e
export DEBIAN_FRONTEND=noninteractive

# Reference: https://github.com/dotcloud/docker/blob/master/Vagrantfile

# The username to add to the docker group will be passed as the first argument
# to the script.  If nothing is passed, default to "vagrant".
user="$1"
if [ -z "$user" ]; then
  user=vagrant
fi

# Adding an apt gpg key is idempotent.
wget -q -O - https://get.docker.io/gpg | apt-key add -

# Creating the docker.list file is idempotent, but it may overrite desired
# settings if it already exists.  This could be solved with md5sum but it
# doesn't seem worth it.
echo 'deb http://get.docker.io/ubuntu docker main' > /etc/apt/sources.list.d/docker.list

# Update remote package metadata.  'apt-get update' is idempotent.
apt-get update -q

# Install docker.  'apt-get install' is idempotent.
apt-get install -q -y lxc-docker

usermod -a -G docker "$user"

# Only install the backport kernel, don't bother upgrade if the backport is
# already installed.  We want parse the output of apt so we need to save it
# with 'tee'.  NOTE: The installation of the kernel will trigger dkms to
# install vboxguest if needed.
tmp=`mktemp -q` && {
  apt-get install -q -y --no-upgrade linux-image-generic-lts-raring | tee "$tmp"

  # Parse the number of installed packages from the output
  NUM_INST=`awk '$2 == "upgraded," && $4 == "newly" { print $3 }' "$tmp"`

  rm "$tmp"
}

# If the number of installed packages is greater than 0, we want to reboot (the
# backport kernel was installed but is not running).
if [ "$NUM_INST" -gt 0 ];
then
  echo "Rebooting down to activate new kernel."
  echo "/vagrant will not be mounted.  Use 'vagrant halt' followed by"
  echo "'vagrant up' to ensure /vagrant is mounted."
  shutdown -r now
fi

# Enable swap.
if [ ! -f /swapfile ]; then
  fallocate -l 1G /swapfile
  mkswap /swapfile
  swapon /swapfile
  chmod 0600 /swapfile
  echo '/swapfile none swap sw 0 0' >> /etc/fstab
fi

# Firewall: Allow Docker.
sed -i.bak 's/DEFAULT_FORWARD_POLICY=".*"/DEFAULT_FORWARD_POLICY="ACCEPT"/' /etc/default/ufw
sed -r -i.bak 's/^#(net\/ipv4\/ip_forward=1|net\/ipv6\/conf\/default\/forwarding=1|net\/ipv6\/conf\/all\/forwarding=1)$/\1/' /etc/ufw/sysctl.conf
ufw allow ssh
ufw --force enable
sudo ufw reload
ufw allow out on docker0
ufw allow in on docker0

